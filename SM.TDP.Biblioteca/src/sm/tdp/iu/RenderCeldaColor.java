/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sm.tdp.iu;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.ListCellRenderer;


/**
 * Esta clase representa cada item de la lista desplegable de colores de tipo JButton
 * @author Tatiana Daniela Pastorini
 * @version 1.0
 */
public class RenderCeldaColor extends javax.swing.JPanel implements ListCellRenderer<Color>{

    /**
     * Creates new form RenderCeldaColor
     */
    public RenderCeldaColor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setToolTipText("");
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Devuelve el componente de tipo Color que se a単ade a la lista de colores
     * @param list donde se va a a単adir el componente
     * @param value el valor del objeto a a単adir
     * @return btn_color componente a a単adir a la lista
     */
    @Override
    public Component getListCellRendererComponent(JList<? extends Color> list, Color value, int index, boolean isSelected, boolean cellHasFocus) {
        JButton btn_color = new JButton();
        btn_color.setBackground(value);
        btn_color.setPreferredSize(new Dimension(25, 25));
        btn_color.setName(value.toString());
        return btn_color;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
